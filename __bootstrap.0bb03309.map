{"version":3,"sources":["examples.js","__bootstrap.js"],"names":["readonly","target","key","descriptor","writable","frozen","initializer","value","call","newValue","undefined","Error","canWalk","prototype","walks","log","count","what","countProp","orig","warn","args","apply","sings","console","HomoSapiens","window","slideshow","buildSlideshow","remark","create","slides","module","hot","accept"],"mappings":"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","file":"__bootstrap.0bb03309.map","sourceRoot":"..","sourcesContent":["console.log(`/************************************************\n**  Welcome to the demo for ES7 Decorators!\n**  The code of the class HomoSapiens is slide 11.\n**\n**  To get started, create an instance:\n**\n**    let p = new HomoSapiens()\n**\n**  Then, feel free to play with the properties and methods:\n**\n**    p.species = 'whatever'\n**    p.species\n**    // => homo.sapiens\n**\n**    p.say('something')\n**    p.walks()\n**\n**    p.dateOfBirth = \"today\"\n**    p.dateOfBirth = \"now\"\n**    // throw new Error('\"dateOfBirth is frozen\"')\n*******************************************\n`)\n\n\nfunction readonly(target, key, descriptor) {\n  descriptor.writable = false\n  return descriptor\n}\n\nfunction frozen(target, key, descriptor) {\n  let initializer = descriptor.initializer || function() {}\n  let value = initializer.call(this)\n  return {\n    get() {\n      return value\n    },\n    set(newValue) {\n      if (value !== undefined) {\n        throw new Error(`${key} is a frozen property`)\n      }\n      value = newValue\n      return value\n    }\n  }\n}\n\nfunction canWalk(target) {\n  target.prototype.walks = function() {\n    console.log(\"I'm walking\")\n  }\n  return target\n}\n\nfunction count(what) {\n  let countProp = `__${what}Count`\n\n  return function(target) {\n    if (target.prototype[what]) {\n      let orig = target.prototype[what]\n\n      target.prototype[countProp] = 0\n\n      target.prototype[what] = function(...args) {\n        let count = ++this[countProp]\n        console.warn(`\"${what}\" has been called ${count} times.`)\n        return orig.apply(this, args)\n      }\n    }\n    return target\n  }\n}\n\nfunction sings(target, key, descriptor) {\n  let orig = target[key]\n  target[key] = function(what) {\n    return `ðŸŽ¶${orig.call(this, what)}ðŸŽ¶`\n  }\n  return target\n}\n\n@count('say')\n@canWalk\nclass HomoSapiens {\n  @readonly\n  species = 'homo sapiens'\n\n  @frozen\n  dateOfBirth\n\n  @sings\n  say(what) {\n    return what\n  }\n}\n\nwindow.HomoSapiens = HomoSapiens\n\n","import slides from './slides.md';\nimport examples from './examples';\n\nlet slideshow;\n\nfunction buildSlideshow() {\n  return remark.create({\n    ratio: '16:9',\n    highlightStyle: 'ocean',\n    sourceUrl: slides\n  });\n}\n\nif (module.hot) {\n  module.hot.accept(function() {\n    slideshow = buildSlideshow();\n  })\n}\n\n\nslideshow = buildSlideshow()\n\n"]}